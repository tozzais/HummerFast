plugins {
    id 'com.android.application'
    id 'bugly'
    id 'com.jakewharton.butterknife'
}


android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.xianlv.business"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"


        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi-v7a", "arm64-v8a", 'x86', 'x86_64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "7820f1f0fc882616f6d162b9", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL : "developer-default" //暂时填写默认值即可.
        ]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            keyAlias 'hanyu'
            keyPassword '123456'
            storeFile file('../xianlv.jks')
            storePassword '123456'
        }
        debug {
            keyAlias 'hanyu'
            keyPassword '123456'
            storeFile file('../xianlv.jks')
            storePassword '123456'
        }
    }



    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    android.applicationVariants.all{ variant->

        variant.outputs.all{

            if (variant.buildType.name =='release') {

                outputFileName ="xianlv_${variant.versionName}_${releaseTime()}.apk"

            }else if (variant.buildType.name =='debug') {

                outputFileName ="xianlv_${variant.versionName}_${releaseTime()}.apk"

            }
        }

    }

}
static def releaseTime() {

    return new Date().format("MMdd-HHmmss", TimeZone.getTimeZone("UTC"))

}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //使用baselibrary需要添加的
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'
    implementation project(path: ':baselibrary')
    implementation 'org.jetbrains:annotations:16.0.1'

    implementation 'com.github.yuzhiqiang1993:zxing:2.2.5'

    //https://github.com/Doikki/DKVideoPlayer/wiki#%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8
//    # 必选，内部默认使用系统mediaplayer进行解码
    implementation 'xyz.doikki.android.dkplayer:dkplayer-java:3.3.1'
//    # 可选，包含StandardVideoController的实现
    implementation 'xyz.doikki.android.dkplayer:dkplayer-ui:3.3.1'
//    # 可选，使用exoplayer进行解码
    implementation 'xyz.doikki.android.dkplayer:player-exo:3.3.1'
//    # 可选，使用ijkplayer进行解码
    implementation 'xyz.doikki.android.dkplayer:player-ijk:3.3.1'
//    # 可选，如需要缓存或者抖音预加载功能请引入此库
    implementation 'xyz.doikki.android.dkplayer:videocache:3.3.1'

    implementation 'cn.yc:WebViewLib:1.2.2'
    implementation 'com.github.youlookwhat:WebProgress:1.1.0'

    //定位功能
    implementation 'com.amap.api:location:5.3.1'

    //log上传
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    implementation 'com.tencent.bugly:crashreport:3.2.422'
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0
    implementation 'com.tencent.bugly:nativecrashreport:3.7.471'

    implementation 'cn.jiguang.sdk:jpush:3.6.0'  // 此处以JPush 3.5.4 版本为例。
    implementation 'cn.jiguang.sdk:jcore:2.3.4'



}